# protokoll def + docu
# jede message hat zusätlich noch einen header mit sizeof() + seqNr
# I .. int als zahl oder bitmaske verwendet
# S .. string
# A{} .. array mit beliebig vielen elementen
#  Kommentare und Leerzeilen werden ignoriert

# erste Message vom server -> client
HELO=protohash:I,name:S,version:S
HELO_ERR=protohash:I,doupdate:I

# im prinzip ein pollen
PING=
# reply = geänderte loks, kann size 0 sein
STATUS_REPLY=info:A{addr:I,speed:I,functions:I}

# beschleunigen reply = STATUS_REPLY
ACC=addr:I

# bremsen
BREAK=addr:I

# vor (1) oder zurück (-1)
DIR=addr:I,dir:I

# stop
STOP=addr:I

# TODO: speed setzen über target-speed-CV-register
ACC_MULTI=list:A{addr:I}
BREAK_MULTI=list:A{addr:I}
DIR_MULTI=dir:I,list:A{addr:I}
STOP_MULTI=list:A{addr:I}

# func ein/aus
SETFUNC=addr:I,funcnr:I,value:I

# notstop/power off, speed jeder lok auf 0 setzen?
POWER=value:I
POWER_REPLY=value:I

#
GETFUNCTIONS=addr:I
GETFUNCTIONS_REPLY=info:A{name:S,value:I,imgname:S}

GETLOCOS=
GETLOCOS_REPLY=info:A{name:S,addr:I,imgname:S,speed:I,functions:I}

# value -1 = nix ändern nur wert liefern
POM=addr:I,cv:I,value:I
# 0=fehler(???) 1=ok 2021 todo: ret=wert, -1 => fehler
POM_REPLY=value:I

POMBIT=addr:I,cv:I,bit:I,value:I
POMBIT_REPLY=value:I

GETIMAGE=imgname:S
GETIMAGE_REPLY=img:S

BTSCAN=
BTSCAN_REPLY=info:A{addr:S,name:S}

BTPUSH=addr:S,type:I
BTPUSH_REPLY=rc:I

# ganz zum schluss ...
version=1.0:I
